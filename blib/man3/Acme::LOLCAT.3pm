.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Acme::LOLCAT 3"
.TH Acme::LOLCAT 3 "2007-10-25" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
Acme::LOLCAT \- SPEEK LIEK A LOLCATZ
.SH "VERSHON"
.IX Header "VERSHON"
Version 0.0.4
.SH "HOEW 2 YOOS IT"
.IX Header "HOEW 2 YOOS IT"
This module translates english sentences into \*(L"\s-1LOLCAT\s0\*(R".  For more
information on \s-1LOLCAT\s0, please consult wikipedia:
(<http://en.wikipedia.org/wiki/Lolcat>)
.PP
.Vb 2
\&  use strict;
\&  use warnings;
.Ve
.PP
.Vb 1
\&  use Acme::LOLCAT;
.Ve
.PP
.Vb 1
\&  my $phrase = translate( "You too can speak like a lolcat!" );
.Ve
.PP
.Vb 1
\&  print $phrase;
.Ve
.PP
.Vb 1
\&  Output:
.Ve
.PP
.Vb 1
\&  YU 2 CAN SPEEK LIEK LOLCAT! KTHX.
.Ve
.SH "ECKSPORTS"
.IX Header "ECKSPORTS"
.IP "translate" 4
.IX Item "translate"
Exports the function \*(L"translate\*(R" into your namespace.
.Sp
Pass translate some text, translate returns some LOLCATed text.
.Sp
If you prefer to call \fItranslate()\fR with the fully qualified name,
and don't want \fItranslate()\fR to be exported into your namespace:
.Sp
.Vb 1
\&  use Acme::LOLCAT ();
.Ve
.Sp
.Vb 1
\&  # ...
.Ve
.Sp
.Vb 2
\&  my $translated_text
\&    = Acme::LOLCAT::Translate( $orginal_text );
.Ve
.SH "DEMONSTRASHUN TO SEEZ IT WERK IN REEL TIEM"
.IX Header "DEMONSTRASHUN TO SEEZ IT WERK IN REEL TIEM"
I've created a quick and dirty ajax powered web page to show how easy
Acme:LOLCAT is to use.  Point your web browser here:
.PP
<http://www.kentcowgill.org/lolcat.html>
.PP
The backend \s-1CGI\s0 that accepts and responds to the ajax requests is very
simple:
.PP
.Vb 1
\&  #!/usr/bin/perl
.Ve
.PP
.Vb 2
\&  use strict;
\&  use warnings;
.Ve
.PP
.Vb 2
\&  use CGI qw/:standard/;
\&  use Acme::LOLCAT;
.Ve
.PP
.Vb 2
\&  print header( -type => 'text/html'),
\&        translate( param( 'english' );
.Ve
.PP
\&... where 'english' is the name of the textarea where input is accepted.
.SH "DEPENDNSEEZ"
.IX Header "DEPENDNSEEZ"
Requires \f(CW\*(C`Exporter\*(C'\fR.
.SH "GUY DAT ROTE IT"
.IX Header "GUY DAT ROTE IT"
Kent Cowgill \f(CW\*(C`kent@c2group.net\*(C'\fR, <http://www.kentcowgill.org>
.SH "REKWESTZ AN BUGZ"
.IX Header "REKWESTZ AN BUGZ"
Please report any requests, suggestions, or bugs via the \s-1RT\s0 bug tracking
system at <http://rt.cpan.org>.
.PP
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Acme::LOLCAT> is the \s-1RT\s0 queue
to Acme::LOLCAT. Please check to see if your bug has already been reported.
.SH "AKNAHLUJMENTZ"
.IX Header "AKNAHLUJMENTZ"
Thanks to Dyana Wu for the patch adding several variations and additions
to the \s-1LOLCAT\s0 vocabulary.
.SH "COPEERITE AN LISUNZ"
.IX Header "COPEERITE AN LISUNZ"
Copyright (c) 2007 by Kent Cowgill
.PP
This library is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
